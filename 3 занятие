{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Копия блокнота \"NLP_day_3 (study)\"","provenance":[{"file_id":"1IS1JxDoYEqBdwYImUZOmexHjObque9h9","timestamp":1627965896421},{"file_id":"1mdbtcOyFLmL8QHRrwHnAZbwut830Zm2z","timestamp":1627886638297}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"5cVh_Hpcfen9"},"source":["# Обучение без учителя - тематическое моделирование, клстеризация"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"siTDLd7WEyYz","executionInfo":{"status":"ok","timestamp":1627884062704,"user_tz":-420,"elapsed":1369,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"66c62b0a-53b5-4f5b-a13a-8d51c4c79264"},"source":["!gdown --id 1ekzNRH1sk6CT473dSozWYaJbRmCg22Vt  # подгрузка датасета предварительно загруженного на диск"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Downloading...\n","From: https://drive.google.com/uc?id=1ekzNRH1sk6CT473dSozWYaJbRmCg22Vt\n","To: /content/kinopoisk-top250.csv\n","\r  0% 0.00/298k [00:00<?, ?B/s]\r100% 298k/298k [00:00<00:00, 41.5MB/s]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LofsdRB_XJoE"},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","\n","df = pd.read_csv('kinopoisk-top250.csv', delimiter=',')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P4XYULllkN5F","executionInfo":{"status":"ok","timestamp":1627884062705,"user_tz":-420,"elapsed":9,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"32923725-4e9f-4d65-f04f-31f495af2ea1"},"source":["df.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 250 entries, 0 to 249\n","Data columns (total 10 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   rating        250 non-null    int64  \n"," 1   movie         250 non-null    object \n"," 2   year          250 non-null    int64  \n"," 3   country       250 non-null    object \n"," 4   rating_ball   250 non-null    float64\n"," 5   overview      250 non-null    object \n"," 6   director      250 non-null    object \n"," 7   screenwriter  250 non-null    object \n"," 8   actors        250 non-null    object \n"," 9   url_logo      250 non-null    object \n","dtypes: float64(1), int64(2), object(7)\n","memory usage: 19.7+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":288},"id":"Y11jj3AbXMNs","executionInfo":{"status":"ok","timestamp":1627884062707,"user_tz":-420,"elapsed":9,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"92007822-d16e-4a83-f49e-d8f1f77e3afe"},"source":["df.head() "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rating</th>\n","      <th>movie</th>\n","      <th>year</th>\n","      <th>country</th>\n","      <th>rating_ball</th>\n","      <th>overview</th>\n","      <th>director</th>\n","      <th>screenwriter</th>\n","      <th>actors</th>\n","      <th>url_logo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Побег из Шоушенка</td>\n","      <td>1994</td>\n","      <td>США</td>\n","      <td>9.111</td>\n","      <td>Бухгалтер Энди Дюфрейн обвинён в убийстве собс...</td>\n","      <td>Фрэнк Дарабонт</td>\n","      <td>Фрэнк Дарабонт;  Стивен Кинг</td>\n","      <td>Тим Роббинс; Морган Фриман; Боб Гантон; Уильям...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Зеленая миля</td>\n","      <td>1999</td>\n","      <td>США</td>\n","      <td>9.062</td>\n","      <td>Пол Эджкомб — начальник блока смертников в тюр...</td>\n","      <td>Фрэнк Дарабонт</td>\n","      <td>Фрэнк Дарабонт;  Стивен Кинг</td>\n","      <td>Том Хэнкс; Дэвид Морс; Бонни Хант; Майкл Кларк...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Форрест Гамп</td>\n","      <td>1994</td>\n","      <td>США</td>\n","      <td>8.913</td>\n","      <td>От лица главного героя Форреста Гампа; слабоум...</td>\n","      <td>Роберт Земекис</td>\n","      <td>Эрик Рот;  Уинстон Грум</td>\n","      <td>Том Хэнкс; Робин Райт; Салли Филд; Гэри Синиз;...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Список Шиндлера</td>\n","      <td>1993</td>\n","      <td>США</td>\n","      <td>8.817</td>\n","      <td>Фильм рассказывает реальную историю загадочног...</td>\n","      <td>Стивен Спилберг</td>\n","      <td>Стивен Зеллиан;  Томас Кенилли</td>\n","      <td>Лиам Нисон; Бен Кингсли; Рэйф Файнс; Кэролайн ...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1+1</td>\n","      <td>2011</td>\n","      <td>Франция</td>\n","      <td>8.807</td>\n","      <td>Пострадав в результате несчастного случая; бог...</td>\n","      <td>Оливье Накаш;  Эрик Толедано</td>\n","      <td>Оливье Накаш;  Филипп Поццо ди Борго;  Эрик Т...</td>\n","      <td>Франсуа Клюзе; Омар Си; Анн Ле Ни; Одри Флеро;...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   rating  ...                                           url_logo\n","0       0  ...  'https://st.kp.yandex.net/images/film_iphone/i...\n","1       1  ...  'https://st.kp.yandex.net/images/film_iphone/i...\n","2       2  ...  'https://st.kp.yandex.net/images/film_iphone/i...\n","3       3  ...  'https://st.kp.yandex.net/images/film_iphone/i...\n","4       4  ...  'https://st.kp.yandex.net/images/film_iphone/i...\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vwykf7BJXT9M","executionInfo":{"status":"ok","timestamp":1627884132071,"user_tz":-420,"elapsed":69371,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"67e8a205-fa4b-4eb7-a0fb-67839c6434b3"},"source":["# Необходимые импорты и подгрузки\n","import pandas as pd # Библиотека для работы с таблицами\n","import nltk # Библиотека для работы с текстами\n","from nltk.tokenize import word_tokenize, sent_tokenize # токенайзер - разбивает непрерывный текст на токены(слова)\n","from nltk.stem.snowball import SnowballStemmer # стеммер - преобразует тексты к начальной форме\n","from nltk.corpus import stopwords # список незначимых слов - я, ты, он, она, там и тд\n","import string\n","\n","nltk.download('all') # Подгрузка необходимых данных для работы работы nltk \n","nltk.download('punkt')\n","nltk.download('stopwords')\n","\n","!pip install pymorphy2\n","import pymorphy2"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading collection 'all'\n","[nltk_data]    | \n","[nltk_data]    | Downloading package abc to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/abc.zip.\n","[nltk_data]    | Downloading package alpino to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/alpino.zip.\n","[nltk_data]    | Downloading package biocreative_ppi to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/biocreative_ppi.zip.\n","[nltk_data]    | Downloading package brown to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/brown.zip.\n","[nltk_data]    | Downloading package brown_tei to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/brown_tei.zip.\n","[nltk_data]    | Downloading package cess_cat to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/cess_cat.zip.\n","[nltk_data]    | Downloading package cess_esp to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/cess_esp.zip.\n","[nltk_data]    | Downloading package chat80 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/chat80.zip.\n","[nltk_data]    | Downloading package city_database to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/city_database.zip.\n","[nltk_data]    | Downloading package cmudict to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/cmudict.zip.\n","[nltk_data]    | Downloading package comparative_sentences to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/comparative_sentences.zip.\n","[nltk_data]    | Downloading package comtrans to /root/nltk_data...\n","[nltk_data]    | Downloading package conll2000 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/conll2000.zip.\n","[nltk_data]    | Downloading package conll2002 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/conll2002.zip.\n","[nltk_data]    | Downloading package conll2007 to /root/nltk_data...\n","[nltk_data]    | Downloading package crubadan to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/crubadan.zip.\n","[nltk_data]    | Downloading package dependency_treebank to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/dependency_treebank.zip.\n","[nltk_data]    | Downloading package dolch to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/dolch.zip.\n","[nltk_data]    | Downloading package europarl_raw to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/europarl_raw.zip.\n","[nltk_data]    | Downloading package floresta to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/floresta.zip.\n","[nltk_data]    | Downloading package framenet_v15 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/framenet_v15.zip.\n","[nltk_data]    | Downloading package framenet_v17 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/framenet_v17.zip.\n","[nltk_data]    | Downloading package gazetteers to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/gazetteers.zip.\n","[nltk_data]    | Downloading package genesis to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/genesis.zip.\n","[nltk_data]    | Downloading package gutenberg to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/gutenberg.zip.\n","[nltk_data]    | Downloading package ieer to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/ieer.zip.\n","[nltk_data]    | Downloading package inaugural to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/inaugural.zip.\n","[nltk_data]    | Downloading package indian to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/indian.zip.\n","[nltk_data]    | Downloading package jeita to /root/nltk_data...\n","[nltk_data]    | Downloading package kimmo to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/kimmo.zip.\n","[nltk_data]    | Downloading package knbc to /root/nltk_data...\n","[nltk_data]    | Downloading package lin_thesaurus to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/lin_thesaurus.zip.\n","[nltk_data]    | Downloading package mac_morpho to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/mac_morpho.zip.\n","[nltk_data]    | Downloading package machado to /root/nltk_data...\n","[nltk_data]    | Downloading package masc_tagged to /root/nltk_data...\n","[nltk_data]    | Downloading package moses_sample to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping models/moses_sample.zip.\n","[nltk_data]    | Downloading package movie_reviews to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/movie_reviews.zip.\n","[nltk_data]    | Downloading package names to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/names.zip.\n","[nltk_data]    | Downloading package nombank.1.0 to /root/nltk_data...\n","[nltk_data]    | Downloading package nps_chat to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/nps_chat.zip.\n","[nltk_data]    | Downloading package omw to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/omw.zip.\n","[nltk_data]    | Downloading package opinion_lexicon to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/opinion_lexicon.zip.\n","[nltk_data]    | Downloading package paradigms to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/paradigms.zip.\n","[nltk_data]    | Downloading package pil to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/pil.zip.\n","[nltk_data]    | Downloading package pl196x to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/pl196x.zip.\n","[nltk_data]    | Downloading package ppattach to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/ppattach.zip.\n","[nltk_data]    | Downloading package problem_reports to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/problem_reports.zip.\n","[nltk_data]    | Downloading package propbank to /root/nltk_data...\n","[nltk_data]    | Downloading package ptb to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/ptb.zip.\n","[nltk_data]    | Downloading package product_reviews_1 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/product_reviews_1.zip.\n","[nltk_data]    | Downloading package product_reviews_2 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/product_reviews_2.zip.\n","[nltk_data]    | Downloading package pros_cons to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/pros_cons.zip.\n","[nltk_data]    | Downloading package qc to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/qc.zip.\n","[nltk_data]    | Downloading package reuters to /root/nltk_data...\n","[nltk_data]    | Downloading package rte to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/rte.zip.\n","[nltk_data]    | Downloading package semcor to /root/nltk_data...\n","[nltk_data]    | Downloading package senseval to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/senseval.zip.\n","[nltk_data]    | Downloading package sentiwordnet to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/sentiwordnet.zip.\n","[nltk_data]    | Downloading package sentence_polarity to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/sentence_polarity.zip.\n","[nltk_data]    | Downloading package shakespeare to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/shakespeare.zip.\n","[nltk_data]    | Downloading package sinica_treebank to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/sinica_treebank.zip.\n","[nltk_data]    | Downloading package smultron to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/smultron.zip.\n","[nltk_data]    | Downloading package state_union to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/state_union.zip.\n","[nltk_data]    | Downloading package stopwords to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/stopwords.zip.\n","[nltk_data]    | Downloading package subjectivity to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/subjectivity.zip.\n","[nltk_data]    | Downloading package swadesh to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/swadesh.zip.\n","[nltk_data]    | Downloading package switchboard to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/switchboard.zip.\n","[nltk_data]    | Downloading package timit to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/timit.zip.\n","[nltk_data]    | Downloading package toolbox to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/toolbox.zip.\n","[nltk_data]    | Downloading package treebank to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/treebank.zip.\n","[nltk_data]    | Downloading package twitter_samples to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/twitter_samples.zip.\n","[nltk_data]    | Downloading package udhr to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/udhr.zip.\n","[nltk_data]    | Downloading package udhr2 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/udhr2.zip.\n","[nltk_data]    | Downloading package unicode_samples to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/unicode_samples.zip.\n","[nltk_data]    | Downloading package universal_treebanks_v20 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    | Downloading package verbnet to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/verbnet.zip.\n","[nltk_data]    | Downloading package verbnet3 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/verbnet3.zip.\n","[nltk_data]    | Downloading package webtext to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/webtext.zip.\n","[nltk_data]    | Downloading package wordnet to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/wordnet.zip.\n","[nltk_data]    | Downloading package wordnet_ic to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/wordnet_ic.zip.\n","[nltk_data]    | Downloading package words to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/words.zip.\n","[nltk_data]    | Downloading package ycoe to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/ycoe.zip.\n","[nltk_data]    | Downloading package rslp to /root/nltk_data...\n","[nltk_data]    |   Unzipping stemmers/rslp.zip.\n","[nltk_data]    | Downloading package maxent_treebank_pos_tagger to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping taggers/maxent_treebank_pos_tagger.zip.\n","[nltk_data]    | Downloading package universal_tagset to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping taggers/universal_tagset.zip.\n","[nltk_data]    | Downloading package maxent_ne_chunker to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping chunkers/maxent_ne_chunker.zip.\n","[nltk_data]    | Downloading package punkt to /root/nltk_data...\n","[nltk_data]    |   Unzipping tokenizers/punkt.zip.\n","[nltk_data]    | Downloading package book_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/book_grammars.zip.\n","[nltk_data]    | Downloading package sample_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/sample_grammars.zip.\n","[nltk_data]    | Downloading package spanish_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/spanish_grammars.zip.\n","[nltk_data]    | Downloading package basque_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/basque_grammars.zip.\n","[nltk_data]    | Downloading package large_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/large_grammars.zip.\n","[nltk_data]    | Downloading package tagsets to /root/nltk_data...\n","[nltk_data]    |   Unzipping help/tagsets.zip.\n","[nltk_data]    | Downloading package snowball_data to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    | Downloading package bllip_wsj_no_aux to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping models/bllip_wsj_no_aux.zip.\n","[nltk_data]    | Downloading package word2vec_sample to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping models/word2vec_sample.zip.\n","[nltk_data]    | Downloading package panlex_swadesh to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    | Downloading package mte_teip5 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/mte_teip5.zip.\n","[nltk_data]    | Downloading package averaged_perceptron_tagger to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping taggers/averaged_perceptron_tagger.zip.\n","[nltk_data]    | Downloading package averaged_perceptron_tagger_ru to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping\n","[nltk_data]    |       taggers/averaged_perceptron_tagger_ru.zip.\n","[nltk_data]    | Downloading package perluniprops to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping misc/perluniprops.zip.\n","[nltk_data]    | Downloading package nonbreaking_prefixes to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/nonbreaking_prefixes.zip.\n","[nltk_data]    | Downloading package vader_lexicon to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    | Downloading package porter_test to /root/nltk_data...\n","[nltk_data]    |   Unzipping stemmers/porter_test.zip.\n","[nltk_data]    | Downloading package wmt15_eval to /root/nltk_data...\n","[nltk_data]    |   Unzipping models/wmt15_eval.zip.\n","[nltk_data]    | Downloading package mwa_ppdb to /root/nltk_data...\n","[nltk_data]    |   Unzipping misc/mwa_ppdb.zip.\n","[nltk_data]    | \n","[nltk_data]  Done downloading collection all\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","Requirement already satisfied: pymorphy2 in /usr/local/lib/python3.7/dist-packages (0.9.1)\n","Requirement already satisfied: dawg-python>=0.7.1 in /usr/local/lib/python3.7/dist-packages (from pymorphy2) (0.7.2)\n","Requirement already satisfied: docopt>=0.6 in /usr/local/lib/python3.7/dist-packages (from pymorphy2) (0.6.2)\n","Requirement already satisfied: pymorphy2-dicts-ru<3.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from pymorphy2) (2.4.417127.4579844)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":474},"id":"t3N6syZ9XaBr","executionInfo":{"status":"ok","timestamp":1627885464030,"user_tz":-420,"elapsed":3490,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"a433c3d6-c196-4772-a54e-9e27a23bde73"},"source":["morph_analyzer = pymorphy2.MorphAnalyzer() # Создаем объект стеммера\n","ru_stop_words = set(stopwords.words('russian')) # Подгружаем список стоп слов из модуля stopwords библиотеки nltk \n","punctuations = list(string.punctuation)\n","\n","def text_processing(text, morph_analyzer, stop_words, punct):\n","    \"\"\"принимает на вход предложение и возвращает леммы токенов предложения, фильтруя по стоп словам и удаляя знаки пунктуации\"\"\"\n","    words = word_tokenize(text) # С помощью токенизации разбиваем текст на токены \n","    words = [word for word in words if word not in stop_words] # Удаляем стопслова\n","    words = [word for word in words if word not in punct] # Удаляем знаки пунктуации\n","    words = [morph_analyzer.parse(word)[0].normalized.word for word in words] # лемматизируем каждое слово\n","    words = ' '.join(words)\n","\n","    return words\n","\n","# генерируем колонку lemmatized_text\n","df['lemmatized_text'] = df['overview'].apply(lambda x: text_processing(x, morph_analyzer, ru_stop_words, punctuations)) # с помощью метода apply прогоняем значения колонки text через нашу функцию обработки text_processing\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rating</th>\n","      <th>movie</th>\n","      <th>year</th>\n","      <th>country</th>\n","      <th>rating_ball</th>\n","      <th>overview</th>\n","      <th>director</th>\n","      <th>screenwriter</th>\n","      <th>actors</th>\n","      <th>url_logo</th>\n","      <th>lemmatized_text</th>\n","      <th>k_means_topic</th>\n","      <th>lda_topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Побег из Шоушенка</td>\n","      <td>1994</td>\n","      <td>США</td>\n","      <td>9.111</td>\n","      <td>Бухгалтер Энди Дюфрейн обвинён в убийстве собс...</td>\n","      <td>Фрэнк Дарабонт</td>\n","      <td>Фрэнк Дарабонт;  Стивен Кинг</td>\n","      <td>Тим Роббинс; Морган Фриман; Боб Гантон; Уильям...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>бухгалтер энди дюфрейн обвинить убийство собст...</td>\n","      <td>2</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Зеленая миля</td>\n","      <td>1999</td>\n","      <td>США</td>\n","      <td>9.062</td>\n","      <td>Пол Эджкомб — начальник блока смертников в тюр...</td>\n","      <td>Фрэнк Дарабонт</td>\n","      <td>Фрэнк Дарабонт;  Стивен Кинг</td>\n","      <td>Том Хэнкс; Дэвид Морс; Бонни Хант; Майкл Кларк...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>пол эджкомба — начальник блок смертник тюрьма ...</td>\n","      <td>2</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Форрест Гамп</td>\n","      <td>1994</td>\n","      <td>США</td>\n","      <td>8.913</td>\n","      <td>От лица главного героя Форреста Гампа; слабоум...</td>\n","      <td>Роберт Земекис</td>\n","      <td>Эрик Рот;  Уинстон Грум</td>\n","      <td>Том Хэнкс; Робин Райт; Салли Филд; Гэри Синиз;...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>от лицо главное герой форрест гампа слабоумный...</td>\n","      <td>2</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Список Шиндлера</td>\n","      <td>1993</td>\n","      <td>США</td>\n","      <td>8.817</td>\n","      <td>Фильм рассказывает реальную историю загадочног...</td>\n","      <td>Стивен Спилберг</td>\n","      <td>Стивен Зеллиан;  Томас Кенилли</td>\n","      <td>Лиам Нисон; Бен Кингсли; Рэйф Файнс; Кэролайн ...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>фильм рассказывать реальный история загадочный...</td>\n","      <td>2</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1+1</td>\n","      <td>2011</td>\n","      <td>Франция</td>\n","      <td>8.807</td>\n","      <td>Пострадав в результате несчастного случая; бог...</td>\n","      <td>Оливье Накаш;  Эрик Толедано</td>\n","      <td>Оливье Накаш;  Филипп Поццо ди Борго;  Эрик Т...</td>\n","      <td>Франсуа Клюзе; Омар Си; Анн Ле Ни; Одри Флеро;...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>пострадать результат несчастный случай богатый...</td>\n","      <td>2</td>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   rating               movie  ...  k_means_topic lda_topic\n","0       0  Побег из Шоушенка   ...              2         4\n","1       1       Зеленая миля   ...              2         9\n","2       2       Форрест Гамп   ...              2         5\n","3       3    Список Шиндлера   ...              2         8\n","4       4                1+1   ...              2         8\n","\n","[5 rows x 13 columns]"]},"metadata":{"tags":[]},"execution_count":64}]},{"cell_type":"code","metadata":{"id":"G1VCfmxiaZDG"},"source":["import warnings\n","warnings.filterwarnings(\"ignore\", category=DeprecationWarning)\n","\n","import pandas as pd\n","import numpy as np\n","import nltk\n","from sklearn.decomposition import TruncatedSVD\n","from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n","from sklearn.cluster import KMeans\n","import multiprocessing\n","from sklearn.decomposition import LatentDirichletAllocation\n","\n","import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VfT8kfn3eCZt"},"source":["![](http://xmlriver.com/blog/wp-content/uploads/2019/03/clustering.jpg)"]},{"cell_type":"code","metadata":{"id":"UPcrF2OaYCyE"},"source":["texts = df['lemmatized_text']\n","vectorizer = CountVectorizer() # min_df=3\n","vectorizer.fit(texts)\n","term_document_matrix = vectorizer.transform(texts)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"odwlX8Qrk5NE","executionInfo":{"status":"ok","timestamp":1627885464397,"user_tz":-420,"elapsed":373,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"fa8863de-a9fb-44a7-fb32-56f93c4e09a2"},"source":["texts"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      бухгалтер энди дюфрейн обвинить убийство собст...\n","1      пол эджкомба — начальник блок смертник тюрьма ...\n","2      от лицо главное герой форрест гампа слабоумный...\n","3      фильм рассказывать реальный история загадочный...\n","4      пострадать результат несчастный случай богатый...\n","                             ...                        \n","245    тед крамер целиком посвятить карьера замечать ...\n","246    новый приключение джек воробей друг уилла терн...\n","247    флера — шестнадцатилетний мальчишка откопать с...\n","248    убить президент африканский республика такой з...\n","249    двое бывший политзаключённый недавно выйти лаг...\n","Name: lemmatized_text, Length: 250, dtype: object"]},"metadata":{"tags":[]},"execution_count":67}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xrekRnqOa7YY","executionInfo":{"status":"ok","timestamp":1627885464401,"user_tz":-420,"elapsed":6,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"ea3edb85-f957-4b65-a209-022fd324a134"},"source":["term_document_matrix"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<250x4891 sparse matrix of type '<class 'numpy.int64'>'\n","\twith 10887 stored elements in Compressed Sparse Row format>"]},"metadata":{"tags":[]},"execution_count":68}]},{"cell_type":"code","metadata":{"id":"2EShIxpacD3T"},"source":["NUM_COMPONENTS = 100 \n","svd = TruncatedSVD(n_components=NUM_COMPONENTS, random_state=42)\n","svd_transformed = svd.fit_transform(term_document_matrix) "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ntNX5KP5eyib"},"source":["![](https://russianblogs.com/images/901/78a45e143e87c2c3a4406cd74217847d.png)"]},{"cell_type":"markdown","metadata":{"id":"lIraRBB6et4z"},"source":["![](https://ai-news.ru/images/posts/pimg2/pimg2-989538.jpg)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6PaRuuoGbApb","executionInfo":{"status":"ok","timestamp":1627885465782,"user_tz":-420,"elapsed":1386,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"c3f8dc70-2881-4d86-aa7d-549f237e4efc"},"source":["NUM_TOPICS=5\n","\n","k_means = KMeans(n_clusters=NUM_TOPICS)\n","k_means.fit(term_document_matrix) "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n","       n_clusters=5, n_init=10, n_jobs=None, precompute_distances='auto',\n","       random_state=None, tol=0.0001, verbose=0)"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"zsq5duEzbPc1"},"source":["k_means_topics = k_means.labels_ # метка топика для каждого текста, полученная из k_means \n","df['k_means_topic'] = k_means_topics # добавим колонку с топиком k_meansе"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LAjcoaY3bf7t","executionInfo":{"status":"ok","timestamp":1627885465784,"user_tz":-420,"elapsed":10,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"32d22d42-ba58-445d-e628-163be087accd"},"source":["df['k_means_topic'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4    179\n","1     40\n","0     29\n","3      1\n","2      1\n","Name: k_means_topic, dtype: int64"]},"metadata":{"tags":[]},"execution_count":72}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":474},"id":"fnjjkdwqcZoj","executionInfo":{"status":"ok","timestamp":1627885465785,"user_tz":-420,"elapsed":9,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"535a341a-cdbd-41e7-9bc2-c8e234ac3e17"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rating</th>\n","      <th>movie</th>\n","      <th>year</th>\n","      <th>country</th>\n","      <th>rating_ball</th>\n","      <th>overview</th>\n","      <th>director</th>\n","      <th>screenwriter</th>\n","      <th>actors</th>\n","      <th>url_logo</th>\n","      <th>lemmatized_text</th>\n","      <th>k_means_topic</th>\n","      <th>lda_topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Побег из Шоушенка</td>\n","      <td>1994</td>\n","      <td>США</td>\n","      <td>9.111</td>\n","      <td>Бухгалтер Энди Дюфрейн обвинён в убийстве собс...</td>\n","      <td>Фрэнк Дарабонт</td>\n","      <td>Фрэнк Дарабонт;  Стивен Кинг</td>\n","      <td>Тим Роббинс; Морган Фриман; Боб Гантон; Уильям...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>бухгалтер энди дюфрейн обвинить убийство собст...</td>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Зеленая миля</td>\n","      <td>1999</td>\n","      <td>США</td>\n","      <td>9.062</td>\n","      <td>Пол Эджкомб — начальник блока смертников в тюр...</td>\n","      <td>Фрэнк Дарабонт</td>\n","      <td>Фрэнк Дарабонт;  Стивен Кинг</td>\n","      <td>Том Хэнкс; Дэвид Морс; Бонни Хант; Майкл Кларк...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>пол эджкомба — начальник блок смертник тюрьма ...</td>\n","      <td>4</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Форрест Гамп</td>\n","      <td>1994</td>\n","      <td>США</td>\n","      <td>8.913</td>\n","      <td>От лица главного героя Форреста Гампа; слабоум...</td>\n","      <td>Роберт Земекис</td>\n","      <td>Эрик Рот;  Уинстон Грум</td>\n","      <td>Том Хэнкс; Робин Райт; Салли Филд; Гэри Синиз;...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>от лицо главное герой форрест гампа слабоумный...</td>\n","      <td>4</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Список Шиндлера</td>\n","      <td>1993</td>\n","      <td>США</td>\n","      <td>8.817</td>\n","      <td>Фильм рассказывает реальную историю загадочног...</td>\n","      <td>Стивен Спилберг</td>\n","      <td>Стивен Зеллиан;  Томас Кенилли</td>\n","      <td>Лиам Нисон; Бен Кингсли; Рэйф Файнс; Кэролайн ...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>фильм рассказывать реальный история загадочный...</td>\n","      <td>4</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1+1</td>\n","      <td>2011</td>\n","      <td>Франция</td>\n","      <td>8.807</td>\n","      <td>Пострадав в результате несчастного случая; бог...</td>\n","      <td>Оливье Накаш;  Эрик Толедано</td>\n","      <td>Оливье Накаш;  Филипп Поццо ди Борго;  Эрик Т...</td>\n","      <td>Франсуа Клюзе; Омар Си; Анн Ле Ни; Одри Флеро;...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>пострадать результат несчастный случай богатый...</td>\n","      <td>4</td>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   rating               movie  ...  k_means_topic lda_topic\n","0       0  Побег из Шоушенка   ...              4         4\n","1       1       Зеленая миля   ...              4         9\n","2       2       Форрест Гамп   ...              4         5\n","3       3    Список Шиндлера   ...              4         8\n","4       4                1+1   ...              4         8\n","\n","[5 rows x 13 columns]"]},"metadata":{"tags":[]},"execution_count":73}]},{"cell_type":"markdown","metadata":{"id":"p3z9XCeodgIz"},"source":["![](https://newtechaudit.ru/wp-content/uploads/2020/12/801_2.png)"]},{"cell_type":"markdown","metadata":{"id":"wF1k2twGdw-E"},"source":["![](https://upload.wikimedia.org/wikipedia/commons/d/d5/%D0%A2%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C.png)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TxYXaTleenXB","executionInfo":{"status":"ok","timestamp":1627885466139,"user_tz":-420,"elapsed":362,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"95e5eba4-5b46-42b6-8520-209c25e308b9"},"source":["NUM_AVAILABLE_CPU = multiprocessing.cpu_count()\n","\n","print(f\"свободно {NUM_AVAILABLE_CPU} ядер для вычислений\")\n","\n","lda = LatentDirichletAllocation(n_components=10,\n","                 max_iter=10,\n","                 n_jobs=NUM_AVAILABLE_CPU-1,\n","                 learning_method='batch',\n","                 verbose=2)\n","\n","lda.fit(term_document_matrix)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["свободно 2 ядер для вычислений\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.2s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.1s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.0s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.1s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n"],"name":"stderr"},{"output_type":"stream","text":["iteration: 1 of max_iter: 10\n","iteration: 2 of max_iter: 10\n","iteration: 3 of max_iter: 10\n","iteration: 4 of max_iter: 10\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.1s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.0s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.0s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.0s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.0s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n"],"name":"stderr"},{"output_type":"stream","text":["iteration: 5 of max_iter: 10\n","iteration: 6 of max_iter: 10\n","iteration: 7 of max_iter: 10\n","iteration: 8 of max_iter: 10\n","iteration: 9 of max_iter: 10\n","iteration: 10 of max_iter: 10\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.0s finished\n","[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.0s finished\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["LatentDirichletAllocation(batch_size=128, doc_topic_prior=None,\n","                          evaluate_every=-1, learning_decay=0.7,\n","                          learning_method='batch', learning_offset=10.0,\n","                          max_doc_update_iter=100, max_iter=10,\n","                          mean_change_tol=0.001, n_components=10, n_jobs=1,\n","                          perp_tol=0.1, random_state=None,\n","                          topic_word_prior=None, total_samples=1000000.0,\n","                          verbose=2)"]},"metadata":{"tags":[]},"execution_count":74}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BfctatsifJS1","executionInfo":{"status":"ok","timestamp":1627885466595,"user_tz":-420,"elapsed":2,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"8462cae4-a202-441e-b9e7-fb3bbf340eff"},"source":["df['lda_topic'] = lda.transform(term_document_matrix).argmax(axis = 1)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n","[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.0s finished\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6jcWu0VWfYqO","executionInfo":{"status":"ok","timestamp":1627885468963,"user_tz":-420,"elapsed":3,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"a985fc56-ee43-4a34-e55b-1303ce7fd27c"},"source":["df['lda_topic'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8    32\n","0    31\n","6    29\n","5    29\n","9    28\n","3    24\n","4    23\n","1    23\n","2    16\n","7    15\n","Name: lda_topic, dtype: int64"]},"metadata":{"tags":[]},"execution_count":76}]},{"cell_type":"code","metadata":{"id":"8km6xJuxeyCC"},"source":["# функция для отрисовки тематик и ключевых слов, входящих в нее\n","\n","def plot_top_words(model, feature_names, n_top_words, title):\n","    fig, axes = plt.subplots(2, 5, figsize=(30, 15), sharex=True)\n","    axes = axes.flatten()\n","    for topic_idx, topic in enumerate(model.components_):\n","        top_features_ind = topic.argsort()[:-n_top_words - 1:-1]\n","        top_features = [feature_names[i] for i in top_features_ind]\n","        weights = topic[top_features_ind]\n","\n","        ax = axes[topic_idx]\n","        ax.barh(top_features, weights, height=0.7)\n","        ax.set_title(f'Topic {topic_idx +1}',\n","                     fontdict={'fontsize': 30})\n","        ax.invert_yaxis()\n","        ax.tick_params(axis='both', which='major', labelsize=20)\n","        for i in 'top right left'.split():\n","            ax.spines[i].set_visible(False)\n","        fig.suptitle(title, fontsize=40)\n","\n","    plt.subplots_adjust(top=0.90, bottom=0.05, wspace=0.90, hspace=0.3)\n","    plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":940},"id":"rsGIR7dLex8t","executionInfo":{"status":"ok","timestamp":1627885475249,"user_tz":-420,"elapsed":2443,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"cec41636-41d9-4a80-e4ff-36bd677d1fd6"},"source":["terms = vectorizer.get_feature_names()\n","n_top_words = 10\n","\n","plot_top_words(lda, terms, n_top_words, 'Topics in LDA model')"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 2160x1080 with 10 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"6emyYk3jdRG-"},"source":["# Извлечение сущностей - Yargy парсер"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PUJ0Xrw2dPq2","executionInfo":{"status":"ok","timestamp":1627884715715,"user_tz":-420,"elapsed":3420,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"f312a6f6-25e5-4072-af2a-436ffc2870e7"},"source":["!pip install yargy ipymarkup"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: yargy in /usr/local/lib/python3.7/dist-packages (0.15.0)\n","Requirement already satisfied: ipymarkup in /usr/local/lib/python3.7/dist-packages (0.9.0)\n","Requirement already satisfied: pymorphy2 in /usr/local/lib/python3.7/dist-packages (from yargy) (0.9.1)\n","Requirement already satisfied: intervaltree>=3 in /usr/local/lib/python3.7/dist-packages (from ipymarkup) (3.1.0)\n","Requirement already satisfied: sortedcontainers<3.0,>=2.0 in /usr/local/lib/python3.7/dist-packages (from intervaltree>=3->ipymarkup) (2.4.0)\n","Requirement already satisfied: pymorphy2-dicts-ru<3.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from pymorphy2->yargy) (2.4.417127.4579844)\n","Requirement already satisfied: dawg-python>=0.7.1 in /usr/local/lib/python3.7/dist-packages (from pymorphy2->yargy) (0.7.2)\n","Requirement already satisfied: docopt>=0.6 in /usr/local/lib/python3.7/dist-packages (from pymorphy2->yargy) (0.6.2)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kvSkpyRWfYRT"},"source":["![](https://habrastorage.org/r/w1560/webt/8q/ml/f1/8qmlf1nmng_9r73nc42p2vhceia.png)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1oJTh7YCdhjG","executionInfo":{"status":"ok","timestamp":1627884716136,"user_tz":-420,"elapsed":424,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"d5d146aa-7601-458c-d3e1-3db7beeb6a58"},"source":["from yargy.tokenizer import MorphTokenizer\n","\n","TOKENIZER = MorphTokenizer()\n","list(TOKENIZER('парсинг'))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[MorphToken(\n","     value='парсинг',\n","     span=[0, 7),\n","     type='RU',\n","     forms=[Form('парсинга', Grams(NOUN,Name,anim,femn,gent,plur)),\n","      Form('парсинга', Grams(NOUN,Name,accs,anim,femn,plur)),\n","      Form('парсинг', Grams(NOUN,inan,masc,nomn,sing)),\n","      Form('парсинг', Grams(NOUN,accs,inan,masc,sing))]\n"," )]"]},"metadata":{"tags":[]},"execution_count":54}]},{"cell_type":"code","metadata":{"id":"jPQLHCVZdnPu"},"source":["from yargy.predicates import (\n","    eq, in_, dictionary,\n","    type, gram, normalized\n",")\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h7dqS76jeSuX","executionInfo":{"status":"ok","timestamp":1627884716137,"user_tz":-420,"elapsed":6,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"3015b598-0f8c-4ccc-f0cb-a15bf7f52018"},"source":["from yargy import (\n","    Parser,\n","    or_, rule\n",")\n","from yargy.tokenizer import MorphTokenizer\n","TOKENIZER = MorphTokenizer()\n","\n","line = 'АМРИТА - лучшие вегетарианские полуфабрикаты'\n","list(TOKENIZER(line))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[MorphToken(\n","     value='АМРИТА',\n","     span=[0, 6),\n","     type='RU',\n","     forms=[Form('амрита', Grams(NOUN,Sgtm,femn,inan,nomn,sing))]\n"," ), Token(\n","     value='-',\n","     span=[7, 8),\n","     type='PUNCT'\n"," ), MorphToken(\n","     value='лучшие',\n","     span=[9, 15),\n","     type='RU',\n","     forms=[Form('хороший', Grams(ADJF,Qual,Supr,nomn,plur)),\n","      Form('хороший', Grams(ADJF,Qual,Supr,accs,inan,plur))]\n"," ), MorphToken(\n","     value='вегетарианские',\n","     span=[16, 30),\n","     type='RU',\n","     forms=[Form('вегетарианский', Grams(ADJF,nomn,plur)),\n","      Form('вегетарианский', Grams(ADJF,accs,inan,plur))]\n"," ), MorphToken(\n","     value='полуфабрикаты',\n","     span=[31, 44),\n","     type='RU',\n","     forms=[Form('полуфабрикат', Grams(NOUN,inan,masc,nomn,plur)),\n","      Form('полуфабрикат', Grams(NOUN,accs,inan,masc,plur))]\n"," )]"]},"metadata":{"tags":[]},"execution_count":56}]},{"cell_type":"code","metadata":{"id":"S60oxRIwNi-c"},"source":["from yargy.pipelines import (\n","    pipeline,\n","    morph_pipeline\n",")\n","RULE_VEG = morph_pipeline([\n","    'вегетарианский полуфабрикат',\n","    'растительное мясо'\n","])\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5-I1tyjlgl4A","executionInfo":{"status":"ok","timestamp":1627884716422,"user_tz":-420,"elapsed":288,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"713e5452-99b6-40a2-f7b9-c73d71d0ea63"},"source":["line = 'АМРИТА - лучшие вегетарианские полуфабрикаты 112 растительного мясо'\n","\n","\n","parser = Parser(RULE_VEG)\n","list(parser.findall(line))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Match(\n","     tokens=[MorphToken(\n","          value='вегетарианские',\n","          span=[16, 30),\n","          type='RU',\n","          forms=[Form('вегетарианский', Grams(ADJF,nomn,plur)),\n","           Form('вегетарианский', Grams(ADJF,accs,inan,plur))]\n","      ),\n","      MorphToken(\n","          value='полуфабрикаты',\n","          span=[31, 44),\n","          type='RU',\n","          forms=[Form('полуфабрикат', Grams(NOUN,inan,masc,nomn,plur)),\n","           Form('полуфабрикат', Grams(NOUN,accs,inan,masc,plur))]\n","      )],\n","     span=[16, 44)\n"," ),\n"," Match(\n","     tokens=[MorphToken(\n","          value='растительного',\n","          span=[49, 62),\n","          type='RU',\n","          forms=[Form('растительный', Grams(ADJF,gent,neut,sing)),\n","           Form('растительный', Grams(ADJF,gent,masc,sing)),\n","           Form('растительный', Grams(ADJF,accs,anim,masc,sing))]\n","      ),\n","      MorphToken(\n","          value='мясо',\n","          span=[63, 67),\n","          type='RU',\n","          forms=[Form('мясо', Grams(NOUN,Sgtm,inan,neut,nomn,sing)),\n","           Form('мясо', Grams(NOUN,Sgtm,accs,inan,neut,sing))]\n","      )],\n","     span=[49, 67)\n"," )]"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TWjmq9IghXcr","executionInfo":{"status":"ok","timestamp":1627885293691,"user_tz":-420,"elapsed":288,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"f3b8695e-39b5-4704-d4e8-33a22a62d236"},"source":["parser.find(line)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Match(\n","    tokens=[MorphToken(\n","         value='вегетарианские',\n","         span=[16, 30),\n","         type='RU',\n","         forms=[Form('вегетарианский', Grams(ADJF,nomn,plur)),\n","          Form('вегетарианский', Grams(ADJF,accs,inan,plur))]\n","     ),\n","     MorphToken(\n","         value='полуфабрикаты',\n","         span=[31, 44),\n","         type='RU',\n","         forms=[Form('полуфабрикат', Grams(NOUN,inan,masc,nomn,plur)),\n","          Form('полуфабрикат', Grams(NOUN,accs,inan,masc,plur))]\n","     )],\n","    span=[16, 44)\n",")"]},"metadata":{"tags":[]},"execution_count":63}]},{"cell_type":"markdown","metadata":{"id":"tLXi9xwRe25N"},"source":["## Дополнительный материал по Yargy парсеру  \n","[Отличная лекция](https://www.youtube.com/watch?v=NQxzx0qYgK8&t=215s&ab_channel=%D0%9A%D0%BE%D0%BC%D0%BF%D1%8C%D1%8E%D1%82%D0%B5%D1%80%D0%BD%D1%8B%D0%B5%D0%BD%D0%B0%D1%83%D0%BA%D0%B8)\n","\n","[Примеры использования в ноутбуках](https://github.com/natasha/yargy-examples)  \n"]},{"cell_type":"markdown","metadata":{"id":"XUGGIc8glsB7"},"source":["## Используем вместе с векторным представлением текстов дополниельные переменные"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"BlpvaQC5MMY2","executionInfo":{"status":"ok","timestamp":1627885870948,"user_tz":-420,"elapsed":88989,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"7e893939-a352-4f4d-b72c-3390eca128ac"},"source":["!pip install dostoevsky\n","!python -m dostoevsky download fasttext-social-network-model\n","\n","from dostoevsky.tokenization import RegexTokenizer\n","from dostoevsky.models import FastTextSocialNetworkModel\n","\n","tokenizer = RegexTokenizer()\n","tokens = tokenizer.split('всё очень плохо')  # [('всё', None), ('очень', None), ('плохо', None)]\n","\n","model = FastTextSocialNetworkModel(tokenizer=tokenizer)\n","\n","messages = df['overview']\n","\n","results = model.predict(messages, k=5)\n","\n","results = pd.DataFrame(results)\n","results.head()\n","\n","results = model.predict(messages, k=5)\n","results = pd.DataFrame(results)\n","df = pd.concat([df, results], axis = 1)\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting dostoevsky\n","  Downloading dostoevsky-0.6.0-py2.py3-none-any.whl (8.5 kB)\n","Collecting fasttext==0.9.2\n","  Downloading fasttext-0.9.2.tar.gz (68 kB)\n","\u001b[K     |████████████████████████████████| 68 kB 2.9 MB/s \n","\u001b[?25hCollecting razdel==0.5.0\n","  Downloading razdel-0.5.0-py3-none-any.whl (21 kB)\n","Collecting pybind11>=2.2\n","  Using cached pybind11-2.7.0-py2.py3-none-any.whl (199 kB)\n","Requirement already satisfied: setuptools>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from fasttext==0.9.2->dostoevsky) (57.2.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from fasttext==0.9.2->dostoevsky) (1.19.5)\n","Building wheels for collected packages: fasttext\n","  Building wheel for fasttext (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for fasttext: filename=fasttext-0.9.2-cp37-cp37m-linux_x86_64.whl size=3093470 sha256=1dc3b37b57fa96bd6bd1092f658c7e90e2536da1efea302f21f29b316f35a593\n","  Stored in directory: /root/.cache/pip/wheels/4e/ca/bf/b020d2be95f7641801a6597a29c8f4f19e38f9c02a345bab9b\n","Successfully built fasttext\n","Installing collected packages: pybind11, razdel, fasttext, dostoevsky\n","Successfully installed dostoevsky-0.6.0 fasttext-0.9.2 pybind11-2.7.0 razdel-0.5.0\n"],"name":"stdout"},{"output_type":"stream","text":["Warning : `load_model` does not return WordVectorModel or SupervisedModel any more, but a `FastText` object which is very similar.\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rating</th>\n","      <th>movie</th>\n","      <th>year</th>\n","      <th>country</th>\n","      <th>rating_ball</th>\n","      <th>overview</th>\n","      <th>director</th>\n","      <th>screenwriter</th>\n","      <th>actors</th>\n","      <th>url_logo</th>\n","      <th>lemmatized_text</th>\n","      <th>k_means_topic</th>\n","      <th>lda_topic</th>\n","      <th>neutral</th>\n","      <th>skip</th>\n","      <th>negative</th>\n","      <th>positive</th>\n","      <th>speech</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Побег из Шоушенка</td>\n","      <td>1994</td>\n","      <td>США</td>\n","      <td>9.111</td>\n","      <td>Бухгалтер Энди Дюфрейн обвинён в убийстве собс...</td>\n","      <td>Фрэнк Дарабонт</td>\n","      <td>Фрэнк Дарабонт;  Стивен Кинг</td>\n","      <td>Тим Роббинс; Морган Фриман; Боб Гантон; Уильям...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>бухгалтер энди дюфрейн обвинить убийство собст...</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>0.407343</td>\n","      <td>0.160276</td>\n","      <td>0.156115</td>\n","      <td>0.103759</td>\n","      <td>0.024433</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Зеленая миля</td>\n","      <td>1999</td>\n","      <td>США</td>\n","      <td>9.062</td>\n","      <td>Пол Эджкомб — начальник блока смертников в тюр...</td>\n","      <td>Фрэнк Дарабонт</td>\n","      <td>Фрэнк Дарабонт;  Стивен Кинг</td>\n","      <td>Том Хэнкс; Дэвид Морс; Бонни Хант; Майкл Кларк...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>пол эджкомба — начальник блок смертник тюрьма ...</td>\n","      <td>4</td>\n","      <td>9</td>\n","      <td>0.600198</td>\n","      <td>0.119213</td>\n","      <td>0.217348</td>\n","      <td>0.082707</td>\n","      <td>0.004765</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Форрест Гамп</td>\n","      <td>1994</td>\n","      <td>США</td>\n","      <td>8.913</td>\n","      <td>От лица главного героя Форреста Гампа; слабоум...</td>\n","      <td>Роберт Земекис</td>\n","      <td>Эрик Рот;  Уинстон Грум</td>\n","      <td>Том Хэнкс; Робин Райт; Салли Филд; Гэри Синиз;...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>от лицо главное герой форрест гампа слабоумный...</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>0.212079</td>\n","      <td>0.125933</td>\n","      <td>0.256842</td>\n","      <td>0.100889</td>\n","      <td>0.129413</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Список Шиндлера</td>\n","      <td>1993</td>\n","      <td>США</td>\n","      <td>8.817</td>\n","      <td>Фильм рассказывает реальную историю загадочног...</td>\n","      <td>Стивен Спилберг</td>\n","      <td>Стивен Зеллиан;  Томас Кенилли</td>\n","      <td>Лиам Нисон; Бен Кингсли; Рэйф Файнс; Кэролайн ...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>фильм рассказывать реальный история загадочный...</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>0.803184</td>\n","      <td>0.030225</td>\n","      <td>0.092698</td>\n","      <td>0.044691</td>\n","      <td>0.020342</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1+1</td>\n","      <td>2011</td>\n","      <td>Франция</td>\n","      <td>8.807</td>\n","      <td>Пострадав в результате несчастного случая; бог...</td>\n","      <td>Оливье Накаш;  Эрик Толедано</td>\n","      <td>Оливье Накаш;  Филипп Поццо ди Борго;  Эрик Т...</td>\n","      <td>Франсуа Клюзе; Омар Си; Анн Ле Ни; Одри Флеро;...</td>\n","      <td>'https://st.kp.yandex.net/images/film_iphone/i...</td>\n","      <td>пострадать результат несчастный случай богатый...</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>0.546748</td>\n","      <td>0.109716</td>\n","      <td>0.132974</td>\n","      <td>0.071601</td>\n","      <td>0.015435</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   rating               movie  year  ...  negative  positive    speech\n","0       0  Побег из Шоушенка   1994  ...  0.156115  0.103759  0.024433\n","1       1       Зеленая миля   1999  ...  0.217348  0.082707  0.004765\n","2       2       Форрест Гамп   1994  ...  0.256842  0.100889  0.129413\n","3       3    Список Шиндлера   1993  ...  0.092698  0.044691  0.020342\n","4       4                1+1   2011  ...  0.132974  0.071601  0.015435\n","\n","[5 rows x 18 columns]"]},"metadata":{"tags":[]},"execution_count":83}]},{"cell_type":"code","metadata":{"id":"mkXvrDOzlx4D"},"source":["texts = df['lemmatized_text']\n","vectorizer = TfidfVectorizer() # min_df=3\n","vectorizer.fit(texts)\n","term_document_matrix = vectorizer.transform(texts)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TNskemr8mAMb"},"source":["from scipy.sparse import hstack\n","\n","columns2stack = ['k_means_topic', 'lda_topic', 'neutral', 'skip', 'negative', 'positive','speech']\n","train_matrix = hstack([term_document_matrix, df[columns2stack]])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"R-Ytdjmomfe7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1627886582805,"user_tz":-420,"elapsed":285,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"28839b07-7599-4911-e5a9-cf5d86ff9094"},"source":["term_document_matrix"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<250x4891 sparse matrix of type '<class 'numpy.float64'>'\n","\twith 10887 stored elements in Compressed Sparse Row format>"]},"metadata":{"tags":[]},"execution_count":90}]},{"cell_type":"code","metadata":{"id":"CBBvxYPsmeb8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1627886578491,"user_tz":-420,"elapsed":277,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"54bf854f-c865-422b-ed29-8d99a6e706ed"},"source":["train_matrix"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<250x4898 sparse matrix of type '<class 'numpy.float64'>'\n","\twith 12577 stored elements in COOrdinate format>"]},"metadata":{"tags":[]},"execution_count":89}]},{"cell_type":"markdown","metadata":{"id":"8f4Pw3HDmIpj"},"source":["## Скачиваем дополнительный набор данных(очистка эмодзи)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wsb6fHRKdsOT","executionInfo":{"status":"ok","timestamp":1627885528386,"user_tz":-420,"elapsed":3948,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"71e89a78-1892-46a0-864a-d7631f2fb557"},"source":["!gdown --id 1elYsfeccM84NczG7TRpZ_5ZRsAAZHHv9"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Downloading...\n","From: https://drive.google.com/uc?id=1elYsfeccM84NczG7TRpZ_5ZRsAAZHHv9\n","To: /content/vk.barkov.net-texts-2021-08-01_14-43-32.csv\n","\r  0% 0.00/147k [00:00<?, ?B/s]\r100% 147k/147k [00:00<00:00, 22.7MB/s]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":494},"id":"cgdqZMiQifer","executionInfo":{"status":"error","timestamp":1627885612629,"user_tz":-420,"elapsed":281,"user":{"displayName":"Бакулин Вячеслав","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgXnS2nh2C_bacG688U3fTbg0SdBSEW_YYNkxi8=s64","userId":"09655322953722313742"}},"outputId":"30b9b4e9-e307-4bdf-8e99-63d1eb909c9e"},"source":["vk_df = pd.read_csv('/content/vk.barkov.net-texts-2021-08-01_14-43-32.csv')"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ParserError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mParserError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-82-2b463eefd16f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvk_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/vk.barkov.net-texts-2021-08-01_14-43-32.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)\u001b[0m\n\u001b[1;32m    686\u001b[0m     )\n\u001b[1;32m    687\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 688\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    689\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    690\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    459\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 460\u001b[0;31m         \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnrows\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    461\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    462\u001b[0m         \u001b[0mparser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36mread\u001b[0;34m(self, nrows)\u001b[0m\n\u001b[1;32m   1196\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnrows\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1197\u001b[0m         \u001b[0mnrows\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_validate_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"nrows\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnrows\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1198\u001b[0;31m         \u001b[0mret\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnrows\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1199\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1200\u001b[0m         \u001b[0;31m# May alter columns / col_dict\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36mread\u001b[0;34m(self, nrows)\u001b[0m\n\u001b[1;32m   2155\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnrows\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2156\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2157\u001b[0;31m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnrows\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2158\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mStopIteration\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2159\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_first_chunk\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader.read\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._read_low_memory\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._read_rows\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._tokenize_rows\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.raise_parser_error\u001b[0;34m()\u001b[0m\n","\u001b[0;31mParserError\u001b[0m: Error tokenizing data. C error: Expected 5 fields in line 5, saw 27\n"]}]}]}